/*Aqui se incluye el nombre del paquete al que va a pertenecer la clase parser.javay todos los paquetes
 que se vayan a utilizar dentro del proyecto. Por ejemplo si sefuera a utilizar la clase ArrayList se 
debe agregar la linea import Java.util.ArrayList;
@author Carlos Arguello
*/

import java.io.*;
import java_cup.runtime.*;

action code{:
   public void ImprimeValorCadena(String str){
        System.out.println(str) ;
   }

   public int suma (String a, String b)
    {
        try{
        if ("".equals(a) || "".equals(b)){
            System.out.println("Exception: null parameters");
            }
        }catch(NumberFormatException e){
            System.out.println("Exception: not a number"); 
        }
        int aa=Integer.parseInt(a);
        int bb=Integer.parseInt(b);
        
        return aa+bb;
    }

    public int resta (String a, String b)
    {
        try{
        if ("".equals(a) || "".equals(b)){
            System.out.println("Exception: null parameters");
            }
        }catch(NumberFormatException e){
            System.out.println("Exception: not a number"); 
        }
        int aa=Integer.parseInt(a);
        int bb=Integer.parseInt(b);
        
        return aa-bb;
    }

    public int multiplicacion (String a, String b)
    {
        try{
        if ("".equals(a) || "".equals(b)){
            System.out.println("Exception: null parameters");
            }
        }catch(NumberFormatException e){
            System.out.println("Exception: not a number"); 
        }
        int aa=Integer.parseInt(a);
        int bb=Integer.parseInt(b);
        
        return aa*bb;
    }

    public int division (String a, String b)
    {
        try{
        if ("".equals(a) || "".equals(b)){
            System.out.println("Exception: null parameters");
            }
        }catch(NumberFormatException e){
            System.out.println("Exception: not a number"); 
        }
        int aa=Integer.parseInt(a);
        int bb=Integer.parseInt(b);
        
        return aa/bb;
    }

    public boolean mayor (String a, String b)
    {
        try{
        if ("".equals(a) || "".equals(b)){
            System.out.println("Exception: null parameters");
            }
        }catch(NumberFormatException e){
            System.out.println("not a number"); 
        }
        int aa=Integer.parseInt(a);
        int bb=Integer.parseInt(b);
        
        if (aa>bb){
            return true;
        }
        else{
            return false;
        }
    }

    public boolean menor (String a, String b)
    {
        try{
        if ("".equals(a) || "".equals(b)){
            System.out.println("Exception: null parameters");
            }
        }catch(NumberFormatException e){
            System.out.println("not a number"); 
        }
        int aa=Integer.parseInt(a);
        int bb=Integer.parseInt(b);
        
        if (aa<bb){
            return true;
        }
        else{
            return false;
        }
    }

:}

parser code{:
public void syntax_error(Symbol st){
    token t=(token)st.value;
    report_error("Error Sintactico:"+ t.getValor()+"- "+t.getX()+"-"+t.getY(),null);
:}

/*Declaracion de variables no terminales*/
non terminal token TIPOS_DATOS_NUMERICOS,CONSTANTE,CONSTANTE_INT;
non terminal token ASIG_ENTERA,BLOQUE_IF_COMPUESTO,BLOQUE_IF_SIMPLE;
non terminal token COMPARACION,ARITMETICAS;
non terminal token COMPARACION_COMPLETA, ARITMETICA_COMPLETA;


/*DECLARACION DE VARIABLES TERMINALES */

terminal token open_lla,close_lla,open_par,close_par;
terminal token suma,resta,multiplicacion,division;
terminal token id,numero;
terminal token pyc_,asignacion_;
terminal token or_,and_,igual_igual,no_igual,mayor, menor;
terminal token main,iff,whilee,elsee,puts,putw,intt;


/*DECLARACION DE PRECEDENCIA */
/*precedence left open_par,close_par,multiplicacion,division,suma,resta,mayor,menor,igual_igual,no_igual,and_,or_;*/

/*GRAMATICA */



ARITMETICAS ::= suma:s | resta:r | multiplicacion:m | division:d;
COMPARACION ::= or_:o | and_:a | igual_igual:ii | no_igual:ni | mayor:ma | menor:me;

COMPARACION_COMPLETA ::=CONSTANTE:y COMPARACION_COMPLETA:cc CONSTANTE:i{:
              String val1=y.getValor();
              String val2=i.getValor();

            if(cc.getValor().equals(">")){
                mayor(val1,val2);
            }
            if(cc.getValor().equals("<")){
                menor(val1,val2);
            }                          
:};

ARITMETICA_COMPLETA ::=CONSTANTE:y ARITMETICA_COMPLETA:ac CONSTANTE:i{:
              String val1=y.getValor();
              String val2=i.getValor();

            if(ac.getValor().equals("+")){
                suma(val1,val2);
            }
            if(ac.getValor().equals("-")){
                resta(val1,val2);
            }  
            if(ac.getValor().equals("*")){
                multiplicacion(val1,val2);
            }
            if(ac.getValor().equals("/")){
                division(val1,val2);
            } 
:};

ASIG_ENTERA ::= CONSTANTE:i asignacion_ CONSTANTE:n pyc_;
CONSTANTE_INT ::= TIPOS_DATOS_NUMERICOS CONSTANTE:i pyc_;
CONSTANTE ::= id:i | numero:n;
TIPOS_DATOS_NUMERICOS ::= intt;