/*Aqui se incluye el nombre del paquete al que va a pertenecer la clase parser.javay todos los paquetes
 que se vayan a utilizar dentro del proyecto. Por ejemplo si sefuera a utilizar la clase ArrayList se 
debe agregar la linea import Java.util.ArrayList;
@author Carlos Arguello
*/

import java.io.*;
import java_cup.runtime.*;
//Clase que incluye las instrucciones de CUP :D
/*el bloque que siguie es codigo que se copia a la clase parser.java,que puede ser utilizado dentro de las acciones semánticaseste
 código se copia exactamente igual sin revisar errores.*/

parser code
{:
/*Generador gen = new Generador();
public void annadeSym(int simbolo)
{
    this.gen.AddDOVarToPile(simbolo + "");
}*/


//este método sirve para el manejo de errores provisto por CUP :D
/*public void syntax_error(Symbol s)
{
     report_error("Error de sintaxis Linea: "+Integer.toString(Yylex.linea)+" Columna: "+Integer.toString(Yylex.pos+1)+" En \""+s.value+"\"",null);
}*/
:}
action code
{:

:}

/*declaración de terminales y sus tipos*/
terminal String NUMERO, IDENTIFICADOR;

terminal ASIGNADOR, SUMA, RESTA, MULTI, DIVI, PUNTO_COMA,PUTS,PUTW,INT,
DIFERENTE, PARENT_AB, PARENT_CE,LLAB_AB, LLAB_CE, OROR, ANDAND, MAYOR, MINOR, EQUEQU,IF, ELSE,WHILE,MAIN;


/*Declaracion de no terminales y sus tipos*/

non terminal TIPO_DATO,TIPO_DATO_IDENTIFICADOR,BLOQUE_WHILE,BLOQUE_IF,OpeARIMETICA,OpeRELACIONAL_LOGICA,OP_RELACIONAL_LOGICO,IDENTIFICADOR_ASIG_NUMERO;
non terminal IMPRIMIR_CADENA,IMPRIMIR_NUMERO,IDENTIFICADOR_ASIG_NUMERO_OP,PROGRAMA,IMPRIMIR,COMILLAIZQ,COMILLADER,BLOQUE_WHILE_IF;

/*presedencia de operadores*/

precedence left PARENT_AB,PARENT_CE,MULTI,DIVI,SUMA,DIVI,MAYOR,MINOR,EQUEQU,DIFERENTE,ANDAND,OROR;

/*Gramática: el lado izquierdo es reemplazado por su correspondiente producción si es un no terminal. 
las acciones semánticas se colocan entre llaves y dos puntos {::}Un terminal o no terminal seguido de dos 
puntos y una letra sirve como un alias del terminalo no terminal para poder utilizarlo como una variable del 
tipo que le fue asignado en los bloques anteriores.*/

PROGRAMA ::= TIPO_DATO_IDENTIFICADOR MAIN PARENT_AB PARENT_CE LLAB_AB IDENTIFICADOR_ASIG_NUMERO  BLOQUE_WHILE IMPRIMIR LLAB_CE
             |  TIPO_DATO_IDENTIFICADOR MAIN PARENT_AB PARENT_CE LLAB_AB IDENTIFICADOR_ASIG_NUMERO  BLOQUE_IF IMPRIMIR LLAB_CE
             |  TIPO_DATO_IDENTIFICADOR MAIN PARENT_AB PARENT_CE LLAB_AB IDENTIFICADOR_ASIG_NUMERO  BLOQUE_WHILE_IF IMPRIMIR LLAB_CE
             |  TIPO_DATO_IDENTIFICADOR MAIN PARENT_AB PARENT_CE LLAB_AB IDENTIFICADOR_ASIG_NUMERO IMPRIMIR LLAB_CE;   
                

IMPRIMIR ::= IMPRIMIR_CADENA | IMPRIMIR_NUMERO |;
IMPRIMIR_CADENA ::= PUTS PARENT_AB COMILLAIZQ IDENTIFICADOR COMILLADER PARENT_CE PUNTO_COMA;
IMPRIMIR_NUMERO ::= PUTW PARENT_AB NUMERO PARENT_CE PUNTO_COMA;

BLOQUE_WHILE_IF ::= WHILE PARENT_AB OP_RELACIONAL_LOGICO PARENT_CE LLAB_AB IDENTIFICADOR_ASIG_NUMERO_OP BLOQUE_IF LLAB_CE;

BLOQUE_IF ::= IF PARENT_AB OP_RELACIONAL_LOGICO PARENT_CE LLAB_AB IDENTIFICADOR_ASIG_NUMERO LLAB_CE ELSE LLAB_AB IDENTIFICADOR_ASIG_NUMERO LLAB_CE |
              IF PARENT_AB OP_RELACIONAL_LOGICO PARENT_CE LLAB_AB IDENTIFICADOR_ASIG_NUMERO LLAB_CE;

BLOQUE_WHILE ::= WHILE PARENT_AB OP_RELACIONAL_LOGICO PARENT_CE LLAB_AB IDENTIFICADOR_ASIG_NUMERO_OP LLAB_CE;

IDENTIFICADOR_ASIG_NUMERO_OP ::= IDENTIFICADOR ASIGNADOR NUMERO PUNTO_COMA
                                 | IDENTIFICADOR ASIGNADOR IDENTIFICADOR OpeARIMETICA IDENTIFICADOR PUNTO_COMA
                                 | IDENTIFICADOR ASIGNADOR IDENTIFICADOR OpeARIMETICA NUMERO PUNTO_COMA
                                 | IDENTIFICADOR ASIGNADOR NUMERO OpeARIMETICA NUMERO PUNTO_COMA
                                 | IDENTIFICADOR ASIGNADOR NUMERO OpeARIMETICA IDENTIFICADOR PUNTO_COMA |; 

OP_RELACIONAL_LOGICO ::= PARENT_AB IDENTIFICADOR OpeRELACIONAL_LOGICA IDENTIFICADOR PARENT_CE 
                        | PARENT_AB IDENTIFICADOR OpeRELACIONAL_LOGICA NUMERO PARENT_CE;
                         
IDENTIFICADOR_ASIG_NUMERO ::= IDENTIFICADOR ASIGNADOR NUMERO PUNTO_COMA | IDENTIFICADOR_ASIG_NUMERO PUNTO_COMA |;

OpeARIMETICA ::= SUMA | RESTA | MULTI | DIVI;

OpeRELACIONAL_LOGICA ::= DIFERENTE | EQUEQU | MAYOR | MINOR | ANDAND | OROR;

TIPO_DATO_IDENTIFICADOR ::= TIPO_DATO IDENTIFICADOR PUNTO_COMA |;
TIPO_DATO ::= INT; 
